{"ast":null,"code":"var _jsxFileName = \"C:\\\\prize-calc\\\\src\\\\prizestakingcalculator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Slider } from \"@/components/ui/slider\";\nimport { Input } from \"@/components/ui/input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PrizeStakingCalculator() {\n  _s();\n  // ─── User-editable state ─────────────────────────────────────────\n  const [totalStaked, setTotalStaked] = useState(700000000);\n  const [userStake, setUserStake] = useState(10000);\n  const [industryPercent, setIndustryPercent] = useState(10);\n  const [tokenPrice, setTokenPrice] = useState(0.01);\n\n  // ─── Constants ────────────────────────────────────────────────────\n  const INDUSTRY_TOTAL = 400000000000; // $400 B\n  const BUSINESS_CUT = 0.03; // 3¢ per $1\n  const MAX_POOL_USD = INDUSTRY_TOTAL * BUSINESS_CUT; // $12 B\n  const COMPOUNDS_PER_YEAR = 365; // daily\n\n  // ─── 1) Slider-adjusted reward pool ───────────────────────────────\n  // 10% → $1.2 B, 100% → $12 B\n  const yieldPoolUSD = MAX_POOL_USD * (industryPercent / 100);\n\n  // ─── 2) Per-token & user annual USD revenue ──────────────────────\n  const perTokenYieldUSD = yieldPoolUSD / totalStaked;\n  const annualRevenueUSD = perTokenYieldUSD * userStake; // e.g. $17 142.86\n\n  // ─── 3) Your USD cost basis ───────────────────────────────────────\n  const initialValueUSD = userStake * tokenPrice; // e.g. $100\n\n  // ─── 4) Raw APR decimal (no extra ÷ 100!) ────────────────────────\n  //    $17 142.86 / $100 ≈ 171.4286 → APR = 171.4286×\n  const aprDecimal = annualRevenueUSD / initialValueUSD;\n\n  // ─── 5) Daily rate & true APY ────────────────────────────────────\n  const dailyRate = aprDecimal / COMPOUNDS_PER_YEAR; // e.g. 0.4699/day\n  const apyFraction = Math.pow(1 + dailyRate, COMPOUNDS_PER_YEAR) - 1;\n  const apyPercent = apyFraction * 100; // e.g. 453.05%\n  const apyRevenueUSD = initialValueUSD * apyFraction; // e.g. $453.05\n\n  // ─── 6) Token price needed for 20% APR goal ─────────────────────\n  // Solve: 0.20 × (totalStaked × x) = yieldPoolUSD\n  // ⇒ x = yieldPoolUSD / (0.20 × totalStaked)\n  const priceFor20APR = yieldPoolUSD / (0.20 * totalStaked); // e.g. $8.57\n\n  // ─── Formatter ───────────────────────────────────────────────────\n  const fmt = n => n.toLocaleString(undefined, {\n    maximumFractionDigits: 2\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-auto p-6\",\n    style: {\n      maxWidth: \"1200px\",\n      fontFamily: \"Chelsea Market\",\n      color: \"black\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"yellow-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading-box\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"$PRIZE Staking Calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"green-box\",\n          style: {\n            backgroundColor: \"#FFF031\",\n            border: \"none\",\n            boxShadow: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"#1427B8\",\n              fontSize: \"1.5rem\"\n            },\n            className: \"space-y-8 pt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"flex-start\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"font-semibold text-blue-600 mb-1\",\n                children: \"Total $PRIZE Tokens Currently Staked\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: \"100%\",\n                  maxWidth: \"500px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  value: fmt(totalStaked),\n                  onChange: e => setTotalStaked(Number(e.target.value.replace(/,/g, \"\"))),\n                  className: \"text-black\",\n                  style: {\n                    fontSize: \"1.3rem\",\n                    padding: \"10px\",\n                    borderRadius: \"8px\",\n                    width: \"100%\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm mt-2\",\n                style: {\n                  fontSize: \"0.9rem\"\n                },\n                children: \"Enter the total number of $PRIZE tokens currently staked on the platform.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"border-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"flex-start\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"font-semibold text-blue-600 mb-1\",\n                children: \"Your $PRIZE Stake\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: \"100%\",\n                  maxWidth: \"500px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  value: fmt(userStake),\n                  onChange: e => setUserStake(Number(e.target.value.replace(/,/g, \"\"))),\n                  className: \"text-black\",\n                  style: {\n                    fontSize: \"1.3rem\",\n                    padding: \"10px\",\n                    borderRadius: \"8px\",\n                    width: \"100%\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm mt-2\",\n                style: {\n                  fontSize: \"0.9rem\"\n                },\n                children: \"Enter how many $PRIZE tokens you are considering to stake.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"border-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"flex-start\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"font-semibold text-blue-600 mb-1\",\n                children: \"$PRIZE Token Price (USD)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: \"100%\",\n                  maxWidth: \"500px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"number\",\n                  value: tokenPrice,\n                  onChange: e => setTokenPrice(parseFloat(e.target.value) || 0),\n                  className: \"text-black\",\n                  style: {\n                    fontSize: \"1.3rem\",\n                    padding: \"10px\",\n                    borderRadius: \"8px\",\n                    width: \"100%\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm mt-2\",\n                style: {\n                  fontSize: \"0.9rem\"\n                },\n                children: \"Enter the current market price of one $PRIZE token in USD.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"border-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"flex-start\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"font-semibold text-blue-600 mb-2\",\n                children: \"Industry Revenue Capture (% of $400 B)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: \"100%\",\n                  maxWidth: \"500px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Slider, {\n                  min: 2,\n                  max: 100,\n                  step: 1,\n                  value: [industryPercent],\n                  onValueChange: val => setIndustryPercent(val[0]),\n                  className: \"slider-field\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: [industryPercent, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm mt-1\",\n                style: {\n                  fontSize: \"0.9rem\"\n                },\n                children: \"Adjust to estimate what portion of the $400 B annual industry revenue the platform captures.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"green-box\",\n          style: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold text-center text-white\",\n            style: {\n              fontSize: \"2.5rem\"\n            },\n            children: \"RESULTS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"border-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              style: {\n                fontSize: \"1.5rem\"\n              },\n              children: \"Staking Revenue (USD):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"#1427B8\",\n                fontSize: \"1.5rem\",\n                fontWeight: \"bold\"\n              },\n              children: [\"$\", fmt(annualRevenueUSD)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-white\",\n              style: {\n                fontSize: \"0.9rem\"\n              },\n              children: \"This is the estimated revenue in USD that your staked $PRIZE tokens would generate based on the captured market share.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"border-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              style: {\n                fontSize: \"1.5rem\"\n              },\n              children: \"APR (%):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"#1427B8\",\n                fontSize: \"1.5rem\",\n                fontWeight: \"bold\"\n              },\n              children: [fmt(aprDecimal * 100), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-white\",\n              style: {\n                fontSize: \"0.9rem\"\n              },\n              children: \"This is your projected return on staked tokens as an annual percentage rate.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"border-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              style: {\n                fontSize: \"1.5rem\"\n              },\n              children: \"Price for 20% APR (USD):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"#1427B8\",\n                fontSize: \"1.5rem\",\n                fontWeight: \"bold\"\n              },\n              children: [\"$\", fmt(priceFor20APR)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-white\",\n              style: {\n                fontSize: \"0.9rem\"\n              },\n              children: \"This is the required token price to achieve a 20% APR across all stakers.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => window.open(\"https://www.prizetech.xyz/buy-prize-ico\", \"_blank\"),\n            className: \"button\",\n            style: {\n              padding: \"12px 48px\",\n              width: \"calc(28% * 3)\",\n              marginTop: \"auto\",\n              marginBottom: \"20px\"\n            },\n            children: \"BUY $PRIZE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(PrizeStakingCalculator, \"AZA4Rf93kDkgWyp8bPD9mrgruRE=\");\n_c = PrizeStakingCalculator;\nvar _c;\n$RefreshReg$(_c, \"PrizeStakingCalculator\");","map":{"version":3,"names":["React","useState","Slider","Input","jsxDEV","_jsxDEV","PrizeStakingCalculator","_s","totalStaked","setTotalStaked","userStake","setUserStake","industryPercent","setIndustryPercent","tokenPrice","setTokenPrice","INDUSTRY_TOTAL","BUSINESS_CUT","MAX_POOL_USD","COMPOUNDS_PER_YEAR","yieldPoolUSD","perTokenYieldUSD","annualRevenueUSD","initialValueUSD","aprDecimal","dailyRate","apyFraction","Math","pow","apyPercent","apyRevenueUSD","priceFor20APR","fmt","n","toLocaleString","undefined","maximumFractionDigits","className","style","maxWidth","fontFamily","color","children","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","border","boxShadow","fontSize","display","flexDirection","alignItems","width","type","value","onChange","e","Number","target","replace","padding","borderRadius","parseFloat","min","max","step","onValueChange","val","fontWeight","onClick","window","open","marginTop","marginBottom","_c","$RefreshReg$"],"sources":["C:/prize-calc/src/prizestakingcalculator.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Slider } from \"@/components/ui/slider\";\r\nimport { Input } from \"@/components/ui/input\";\r\n\r\nexport default function PrizeStakingCalculator() {\r\n  // ─── User-editable state ─────────────────────────────────────────\r\n  const [totalStaked, setTotalStaked]         = useState(700_000_000);\r\n  const [userStake, setUserStake]             = useState(10_000);\r\n  const [industryPercent, setIndustryPercent] = useState(10);\r\n  const [tokenPrice, setTokenPrice]           = useState(0.01);\r\n\r\n  // ─── Constants ────────────────────────────────────────────────────\r\n  const INDUSTRY_TOTAL     = 400_000_000_000;               // $400 B\r\n  const BUSINESS_CUT       = 0.03;                          // 3¢ per $1\r\n  const MAX_POOL_USD       = INDUSTRY_TOTAL * BUSINESS_CUT; // $12 B\r\n  const COMPOUNDS_PER_YEAR = 365;                           // daily\r\n\r\n  // ─── 1) Slider-adjusted reward pool ───────────────────────────────\r\n  // 10% → $1.2 B, 100% → $12 B\r\n  const yieldPoolUSD = MAX_POOL_USD * (industryPercent / 100);\r\n\r\n  // ─── 2) Per-token & user annual USD revenue ──────────────────────\r\n  const perTokenYieldUSD = yieldPoolUSD / totalStaked;\r\n  const annualRevenueUSD = perTokenYieldUSD * userStake;    // e.g. $17 142.86\r\n\r\n  // ─── 3) Your USD cost basis ───────────────────────────────────────\r\n  const initialValueUSD = userStake * tokenPrice;           // e.g. $100\r\n\r\n  // ─── 4) Raw APR decimal (no extra ÷ 100!) ────────────────────────\r\n  //    $17 142.86 / $100 ≈ 171.4286 → APR = 171.4286×\r\n  const aprDecimal = annualRevenueUSD / initialValueUSD;\r\n\r\n  // ─── 5) Daily rate & true APY ────────────────────────────────────\r\n  const dailyRate   = aprDecimal / COMPOUNDS_PER_YEAR;       // e.g. 0.4699/day\r\n  const apyFraction = Math.pow(1 + dailyRate, COMPOUNDS_PER_YEAR) - 1;\r\n  const apyPercent  = apyFraction * 100;                    // e.g. 453.05%\r\n  const apyRevenueUSD = initialValueUSD * apyFraction;      // e.g. $453.05\r\n\r\n  // ─── 6) Token price needed for 20% APR goal ─────────────────────\r\n  // Solve: 0.20 × (totalStaked × x) = yieldPoolUSD\r\n  // ⇒ x = yieldPoolUSD / (0.20 × totalStaked)\r\n  const priceFor20APR = yieldPoolUSD / (0.20 * totalStaked); // e.g. $8.57\r\n\r\n  // ─── Formatter ───────────────────────────────────────────────────\r\n  const fmt = n => n.toLocaleString(undefined, { maximumFractionDigits: 2 });\r\n\r\n  return (\r\n    <div\r\n      className=\"mx-auto p-6\"\r\n      style={{ maxWidth: \"1200px\", fontFamily: \"Chelsea Market\", color: \"black\" }}\r\n    >\r\n      <div className=\"yellow-box\">\r\n        <div className=\"heading-box\">\r\n          <h1>$PRIZE Staking Calculator</h1>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n          \r\n          {/* ── INPUT PANEL ─────────────────────────────────────── */}\r\n          <div className=\"green-box\" style={{ backgroundColor:\"#FFF031\", border:\"none\", boxShadow:\"none\" }}>\r\n            <div style={{ color:\"#1427B8\", fontSize:\"1.5rem\" }} className=\"space-y-8 pt-2\">\r\n\r\n              {/* Total Staked */}\r\n              <div style={{ display:\"flex\", flexDirection:\"column\", alignItems:\"flex-start\" }}>\r\n                <label className=\"font-semibold text-blue-600 mb-1\">\r\n                  Total $PRIZE Tokens Currently Staked\r\n                </label>\r\n                <div style={{ width:\"100%\", maxWidth:\"500px\" }}>\r\n                  <Input\r\n                    type=\"text\"\r\n                    value={fmt(totalStaked)}\r\n                    onChange={e => setTotalStaked(Number(e.target.value.replace(/,/g,\"\")))}\r\n                    className=\"text-black\"\r\n                    style={{ fontSize:\"1.3rem\", padding:\"10px\", borderRadius:\"8px\", width:\"100%\" }}\r\n                  />\r\n                </div>\r\n                <p className=\"text-sm mt-2\" style={{ fontSize:\"0.9rem\" }}>\r\n                  Enter the total number of $PRIZE tokens currently staked on the platform.\r\n                </p>\r\n              </div>\r\n              <hr className=\"border-white\"/>\r\n\r\n              {/* Your Stake */}\r\n              <div style={{ display:\"flex\", flexDirection:\"column\", alignItems:\"flex-start\" }}>\r\n                <label className=\"font-semibold text-blue-600 mb-1\">\r\n                  Your $PRIZE Stake\r\n                </label>\r\n                <div style={{ width:\"100%\", maxWidth:\"500px\" }}>\r\n                  <Input\r\n                    type=\"text\"\r\n                    value={fmt(userStake)}\r\n                    onChange={e => setUserStake(Number(e.target.value.replace(/,/g,\"\")))}\r\n                    className=\"text-black\"\r\n                    style={{ fontSize:\"1.3rem\", padding:\"10px\", borderRadius:\"8px\", width:\"100%\" }}\r\n                  />\r\n                </div>\r\n                <p className=\"text-sm mt-2\" style={{ fontSize:\"0.9rem\" }}>\r\n                  Enter how many $PRIZE tokens you are considering to stake.\r\n                </p>\r\n              </div>\r\n              <hr className=\"border-white\"/>\r\n\r\n              {/* Token Price */}\r\n              <div style={{ display:\"flex\", flexDirection:\"column\", alignItems:\"flex-start\" }}>\r\n                <label className=\"font-semibold text-blue-600 mb-1\">\r\n                  $PRIZE Token Price (USD)\r\n                </label>\r\n                <div style={{ width:\"100%\", maxWidth:\"500px\" }}>\r\n                  <Input\r\n                    type=\"number\"\r\n                    value={tokenPrice}\r\n                    onChange={e => setTokenPrice(parseFloat(e.target.value) || 0)}\r\n                    className=\"text-black\"\r\n                    style={{ fontSize:\"1.3rem\", padding:\"10px\", borderRadius:\"8px\", width:\"100%\" }}\r\n                  />\r\n                </div>\r\n                <p className=\"text-sm mt-2\" style={{ fontSize:\"0.9rem\" }}>\r\n                  Enter the current market price of one $PRIZE token in USD.\r\n                </p>\r\n              </div>\r\n              <hr className=\"border-white\"/>\r\n\r\n              {/* Industry Revenue Slider */}\r\n              <div style={{ display:\"flex\", flexDirection:\"column\", alignItems:\"flex-start\" }}>\r\n                <label className=\"font-semibold text-blue-600 mb-2\">\r\n                  Industry Revenue Capture (% of $400 B)\r\n                </label>\r\n                <div style={{ width:\"100%\", maxWidth:\"500px\" }}>\r\n                  <Slider\r\n                    min={2} max={100} step={1}\r\n                    value={[industryPercent]}\r\n                    onValueChange={val => setIndustryPercent(val[0])}\r\n                    className=\"slider-field\"\r\n                  />\r\n                </div>\r\n                <div className=\"mt-2\">{industryPercent}%</div>\r\n                <p className=\"text-sm mt-1\" style={{ fontSize:\"0.9rem\" }}>\r\n                  Adjust to estimate what portion of the $400 B annual industry revenue the platform captures.\r\n                </p>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          {/* ── RESULTS PANEL ────────────────────────────────────── */}\r\n          <div className=\"green-box\" style={{ width:\"100%\" }}>\r\n            <div className=\"text-2xl font-bold text-center text-white\" style={{ fontSize:\"2.5rem\" }}>\r\n              RESULTS\r\n            </div>\r\n            <hr className=\"border-white\"/>\r\n\r\n            {/* Staking Revenue USD */}\r\n            <div>\r\n              <strong style={{ fontSize:\"1.5rem\" }}>\r\n                Staking Revenue (USD):\r\n              </strong>\r\n              <div style={{ color:\"#1427B8\", fontSize:\"1.5rem\", fontWeight:\"bold\" }}>\r\n                ${fmt(annualRevenueUSD)}\r\n              </div>\r\n              <p className=\"text-sm text-white\" style={{ fontSize:\"0.9rem\" }}>\r\n                This is the estimated revenue in USD that your staked $PRIZE tokens would generate based on the captured market share.\r\n              </p>\r\n            </div>\r\n            <hr className=\"border-white\"/>\r\n\r\n            {/* APR % */}\r\n            <div>\r\n              <strong style={{ fontSize:\"1.5rem\" }}>APR (%):</strong>\r\n              <div style={{ color:\"#1427B8\", fontSize:\"1.5rem\", fontWeight:\"bold\" }}>\r\n                {fmt(aprDecimal * 100)}%\r\n              </div>\r\n              <p className=\"text-sm text-white\" style={{ fontSize:\"0.9rem\" }}>\r\n                This is your projected return on staked tokens as an annual percentage rate.\r\n              </p>\r\n            </div>\r\n            <hr className=\"border-white\"/>\r\n\r\n            {/* Price for 20% APR */}\r\n            <div>\r\n              <strong style={{ fontSize:\"1.5rem\" }}>Price for 20% APR (USD):</strong>\r\n              <div style={{ color:\"#1427B8\", fontSize:\"1.5rem\", fontWeight:\"bold\" }}>\r\n                ${fmt(priceFor20APR)}\r\n              </div>\r\n              <p className=\"text-sm text-white\" style={{ fontSize:\"0.9rem\" }}>\r\n                This is the required token price to achieve a 20% APR across all stakers.\r\n              </p>\r\n            </div>\r\n\r\n            <button\r\n              onClick={() => window.open(\"https://www.prizetech.xyz/buy-prize-ico\",\"_blank\")}\r\n              className=\"button\"\r\n              style={{ padding:\"12px 48px\", width:\"calc(28% * 3)\", marginTop:\"auto\", marginBottom:\"20px\" }}\r\n            >\r\n              BUY $PRIZE\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}